{"ast":null,"code":"import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport api from '../services/api';\nconst useAuthStore = create(persist((set, get) => ({\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  // Login user\n  login: async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const {\n        user,\n        token\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true\n      });\n\n      // Set token in localStorage for API requests\n      localStorage.setItem('token', token);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  // Register user\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        user,\n        token\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true\n      });\n\n      // Set token in localStorage for API requests\n      localStorage.setItem('token', token);\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n  // Logout user\n  logout: async () => {\n    try {\n      // Call logout endpoint\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      // Clear state and localStorage\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false\n      });\n      localStorage.removeItem('token');\n    }\n  },\n  // Update user profile\n  updateProfile: async profileData => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      const {\n        user\n      } = response.data;\n      set({\n        user\n      });\n      return {\n        success: true,\n        user\n      };\n    } catch (error) {\n      console.error('Profile update error:', error);\n      throw error;\n    }\n  },\n  // Get user profile\n  getProfile: async () => {\n    try {\n      const response = await api.get('/auth/profile');\n      const {\n        user\n      } = response.data;\n      set({\n        user\n      });\n      return user;\n    } catch (error) {\n      console.error('Profile fetch error:', error);\n      throw error;\n    }\n  },\n  // Check authentication status\n  checkAuth: async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false\n      });\n      return false;\n    }\n    try {\n      const response = await api.get('/auth/profile');\n      const {\n        user\n      } = response.data;\n      set({\n        user,\n        token,\n        isAuthenticated: true\n      });\n      return true;\n    } catch (error) {\n      console.error('Auth check error:', error);\n      // Clear invalid token\n      localStorage.removeItem('token');\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false\n      });\n      return false;\n    }\n  },\n  // Initialize auth state\n  init: async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      set({\n        token\n      });\n      try {\n        // Verify token validity\n        const response = await api.get('/auth/profile');\n        const {\n          user\n        } = response.data;\n        set({\n          user,\n          isAuthenticated: true\n        });\n        return true;\n      } catch (error) {\n        console.error('Token validation failed:', error);\n        // Clear invalid token\n        localStorage.removeItem('token');\n        set({\n          user: null,\n          token: null,\n          isAuthenticated: false\n        });\n        return false;\n      }\n    }\n    return false;\n  }\n}), {\n  name: 'auth-storage',\n  partialize: state => ({\n    user: state.user,\n    token: state.token,\n    isAuthenticated: state.isAuthenticated\n  })\n}));\nexport { useAuthStore };\nexport default useAuthStore;","map":{"version":3,"names":["create","persist","api","useAuthStore","set","get","user","token","isAuthenticated","login","credentials","response","post","data","localStorage","setItem","success","error","console","register","userData","logout","removeItem","updateProfile","profileData","put","getProfile","checkAuth","getItem","init","name","partialize","state"],"sources":["C:/Users/kelvin/Desktop/kijumbe/frontend/src/stores/authStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport api from '../services/api';\n\nconst useAuthStore = create(\n  persist(\n    (set, get) => ({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n\n      // Login user\n      login: async (credentials) => {\n        try {\n          const response = await api.post('/auth/login', credentials);\n          const { user, token } = response.data;\n          \n          set({\n            user,\n            token,\n            isAuthenticated: true\n          });\n\n          // Set token in localStorage for API requests\n          localStorage.setItem('token', token);\n          \n          return { success: true, user };\n        } catch (error) {\n          console.error('Login error:', error);\n          throw error;\n        }\n      },\n\n      // Register user\n      register: async (userData) => {\n        try {\n          const response = await api.post('/auth/register', userData);\n          const { user, token } = response.data;\n          \n          set({\n            user,\n            token,\n            isAuthenticated: true\n          });\n\n          // Set token in localStorage for API requests\n          localStorage.setItem('token', token);\n          \n          return { success: true, user };\n        } catch (error) {\n          console.error('Registration error:', error);\n          throw error;\n        }\n      },\n\n      // Logout user\n      logout: async () => {\n        try {\n          // Call logout endpoint\n          await api.post('/auth/logout');\n        } catch (error) {\n          console.error('Logout error:', error);\n        } finally {\n          // Clear state and localStorage\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false\n          });\n          localStorage.removeItem('token');\n        }\n      },\n\n      // Update user profile\n      updateProfile: async (profileData) => {\n        try {\n          const response = await api.put('/auth/profile', profileData);\n          const { user } = response.data;\n          \n          set({ user });\n          return { success: true, user };\n        } catch (error) {\n          console.error('Profile update error:', error);\n          throw error;\n        }\n      },\n\n      // Get user profile\n      getProfile: async () => {\n        try {\n          const response = await api.get('/auth/profile');\n          const { user } = response.data;\n          \n          set({ user });\n          return user;\n        } catch (error) {\n          console.error('Profile fetch error:', error);\n          throw error;\n        }\n      },\n\n      // Check authentication status\n      checkAuth: async () => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false\n          });\n          return false;\n        }\n\n        try {\n          const response = await api.get('/auth/profile');\n          const { user } = response.data;\n          \n          set({\n            user,\n            token,\n            isAuthenticated: true\n          });\n          \n          return true;\n        } catch (error) {\n          console.error('Auth check error:', error);\n          // Clear invalid token\n          localStorage.removeItem('token');\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false\n          });\n          return false;\n        }\n      },\n\n      // Initialize auth state\n      init: async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n          set({ token });\n          try {\n            // Verify token validity\n            const response = await api.get('/auth/profile');\n            const { user } = response.data;\n            set({\n              user,\n              isAuthenticated: true\n            });\n            return true;\n          } catch (error) {\n            console.error('Token validation failed:', error);\n            // Clear invalid token\n            localStorage.removeItem('token');\n            set({\n              user: null,\n              token: null,\n              isAuthenticated: false\n            });\n            return false;\n          }\n        }\n        return false;\n      }\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({ \n        user: state.user,\n        token: state.token,\n        isAuthenticated: state.isAuthenticated\n      })\n    }\n  )\n);\n\nexport { useAuthStore };\nexport default useAuthStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}