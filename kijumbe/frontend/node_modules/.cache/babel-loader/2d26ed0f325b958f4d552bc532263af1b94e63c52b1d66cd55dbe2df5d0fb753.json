{"ast":null,"code":"import{create}from'zustand';import{persist}from'zustand/middleware';import api from'../services/api';const useAuthStore=create(persist((set,get)=>({user:null,token:null,isAuthenticated:false,// Login user\nlogin:async credentials=>{try{const response=await api.post('/auth/login',credentials);const{user,token}=response.data;set({user,token,isAuthenticated:true});// Set token in localStorage for API requests\nlocalStorage.setItem('token',token);return{success:true,user};}catch(error){console.error('Login error:',error);throw error;}},// Register user\nregister:async userData=>{try{const response=await api.post('/auth/register',userData);const{user,token}=response.data;set({user,token,isAuthenticated:true});// Set token in localStorage for API requests\nlocalStorage.setItem('token',token);return{success:true,user};}catch(error){console.error('Registration error:',error);throw error;}},// Logout user\nlogout:async()=>{try{// Call logout endpoint\nawait api.post('/auth/logout');}catch(error){console.error('Logout error:',error);}finally{// Clear state and localStorage\nset({user:null,token:null,isAuthenticated:false});localStorage.removeItem('token');}},// Update user profile\nupdateProfile:async profileData=>{try{const response=await api.put('/auth/profile',profileData);const{user}=response.data;set({user});return{success:true,user};}catch(error){console.error('Profile update error:',error);throw error;}},// Get user profile\ngetProfile:async()=>{try{const response=await api.get('/auth/profile');const{user}=response.data;set({user});return user;}catch(error){console.error('Profile fetch error:',error);throw error;}},// Check authentication status\ncheckAuth:async()=>{const token=localStorage.getItem('token');if(!token){set({user:null,token:null,isAuthenticated:false});return false;}try{const response=await api.get('/auth/profile');const{user}=response.data;set({user,token,isAuthenticated:true});return true;}catch(error){console.error('Auth check error:',error);// Clear invalid token\nlocalStorage.removeItem('token');set({user:null,token:null,isAuthenticated:false});return false;}},// Initialize auth state\ninit:()=>{const token=localStorage.getItem('token');if(token){set({token,isAuthenticated:true});// Check auth status in background\nget().checkAuth();}}}),{name:'auth-storage',partialize:state=>({user:state.user,token:state.token,isAuthenticated:state.isAuthenticated})}));export{useAuthStore};export default useAuthStore;","map":{"version":3,"names":["create","persist","api","useAuthStore","set","get","user","token","isAuthenticated","login","credentials","response","post","data","localStorage","setItem","success","error","console","register","userData","logout","removeItem","updateProfile","profileData","put","getProfile","checkAuth","getItem","init","name","partialize","state"],"sources":["C:/Users/kelvin/Desktop/kijumbe/frontend/src/stores/authStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport api from '../services/api';\n\nconst useAuthStore = create(\n  persist(\n    (set, get) => ({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n\n      // Login user\n      login: async (credentials) => {\n        try {\n          const response = await api.post('/auth/login', credentials);\n          const { user, token } = response.data;\n          \n          set({\n            user,\n            token,\n            isAuthenticated: true\n          });\n\n          // Set token in localStorage for API requests\n          localStorage.setItem('token', token);\n          \n          return { success: true, user };\n        } catch (error) {\n          console.error('Login error:', error);\n          throw error;\n        }\n      },\n\n      // Register user\n      register: async (userData) => {\n        try {\n          const response = await api.post('/auth/register', userData);\n          const { user, token } = response.data;\n          \n          set({\n            user,\n            token,\n            isAuthenticated: true\n          });\n\n          // Set token in localStorage for API requests\n          localStorage.setItem('token', token);\n          \n          return { success: true, user };\n        } catch (error) {\n          console.error('Registration error:', error);\n          throw error;\n        }\n      },\n\n      // Logout user\n      logout: async () => {\n        try {\n          // Call logout endpoint\n          await api.post('/auth/logout');\n        } catch (error) {\n          console.error('Logout error:', error);\n        } finally {\n          // Clear state and localStorage\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false\n          });\n          localStorage.removeItem('token');\n        }\n      },\n\n      // Update user profile\n      updateProfile: async (profileData) => {\n        try {\n          const response = await api.put('/auth/profile', profileData);\n          const { user } = response.data;\n          \n          set({ user });\n          return { success: true, user };\n        } catch (error) {\n          console.error('Profile update error:', error);\n          throw error;\n        }\n      },\n\n      // Get user profile\n      getProfile: async () => {\n        try {\n          const response = await api.get('/auth/profile');\n          const { user } = response.data;\n          \n          set({ user });\n          return user;\n        } catch (error) {\n          console.error('Profile fetch error:', error);\n          throw error;\n        }\n      },\n\n      // Check authentication status\n      checkAuth: async () => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false\n          });\n          return false;\n        }\n\n        try {\n          const response = await api.get('/auth/profile');\n          const { user } = response.data;\n          \n          set({\n            user,\n            token,\n            isAuthenticated: true\n          });\n          \n          return true;\n        } catch (error) {\n          console.error('Auth check error:', error);\n          // Clear invalid token\n          localStorage.removeItem('token');\n          set({\n            user: null,\n            token: null,\n            isAuthenticated: false\n          });\n          return false;\n        }\n      },\n\n      // Initialize auth state\n      init: () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n          set({ token, isAuthenticated: true });\n          // Check auth status in background\n          get().checkAuth();\n        }\n      }\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({ \n        user: state.user,\n        token: state.token,\n        isAuthenticated: state.isAuthenticated\n      })\n    }\n  )\n);\n\nexport { useAuthStore };\nexport default useAuthStore;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}